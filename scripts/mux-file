#!/bin/sh

[ -z "$1" ] && exit

filename="$1"
extension="${filename##*.}"

case "$extension" in
  c)
    cmd="gcc $filename"
    run='./a.out'
    clean='rm -f a.out'
    ;;
  cpp | cc)
    cmd='g++'
    test -f compile_flags.txt && cmd="$cmd @compile_flags.txt"
    cmd="$cmd $filename"
    run='./a.out'
    clean='rm -f a.out'
    ;;
  rs)
    cmd="rustc $filename"
    run='./a'
    clean='rm -f a'
    ;;
  sh)
    cmd="sh $filename"
    ;;
  ts)
    cmd="npx ts-node"
    test -s package.json && cmd="$cmd --skipProject"
    cmd="$cmd $filename"
    ;;
  js)
    cmd="node $filename"
    ;;
  py)
    if [ "$(basename "$PWD")" = icpc ]; then
      inputfile="${filename%%.*}.txt"
      cmd="cat $inputfile |"
    fi
    cmd="$cmd python $filename"
    ;;
  *)
    exit
    ;;
esac

echo " > $cmd" && eval "$cmd" || exit
[ -z "$run" ] || echo " > $run" && eval "$run"
[ -z "$clean" ] || printf '\n > %s\n' "$clean" && eval "$clean"
